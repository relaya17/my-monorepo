name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: my-monorepo-app

    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 🛎 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📥 Install dependencies
        run: pnpm install --recursive --frozen-lockfile

      - name: 🧹 Lint all
        run: pnpm -r run lint

      - name: 🧠 Type check all
        run: pnpm -r run type-check

      - name: 🧪 Run tests
        run: pnpm -r run test || echo "No tests found, skipping..."

      - name: 🏗️ Build all
        run: pnpm -r run build

  security:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: my-monorepo-app
    needs: test-and-build

    steps:
      - name: 🛎 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🛡️ Run audit
        run: pnpm audit --audit-level moderate || exit 0

  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: my-monorepo-app
    needs: [test-and-build, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: 🛎 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build apps
        run: pnpm -r run build

      - name: 🚀 Deploy to Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: 'client/dist'  # יחסי ל-my-monorepo-app
          production-branch: main
          deploy-message: "🚀 Auto-deployed from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: ✅ Notify success
        run: echo "✅ Deployment complete!"
