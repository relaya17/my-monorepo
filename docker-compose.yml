version: '3.8'

services:
  # מסד נתונים MongoDB
  mongodb:
    image: mongo:6
    container_name: payments_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: payments_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - payments_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 30s
      timeout: 10s
      retries: 3

  # שרת Node.js
  server:
    build:
      context: ./my-monorepo-app/server
      dockerfile: Dockerfile
    container_name: payments_server
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MONGO_URI: mongodb://admin:admin123@mongodb:27017/payments_db?authSource=admin
      PORT: 3008
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    ports:
      - "3008:3008"
    volumes:
      - ./my-monorepo-app/uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - payments_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3008/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # קליינט React
  client:
    build:
      context: ./my-monorepo-app/client
      dockerfile: Dockerfile
    container_name: payments_client
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3008
      VITE_APP_NAME: Payments System
    ports:
      - "5174:5174"
    depends_on:
      server:
        condition: service_healthy
    networks:
      - payments_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: payments_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - client
      - server
    networks:
      - payments_network

  # Redis (למטמון וסשנים)
  redis:
    image: redis:alpine
    container_name: payments_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - payments_network
    command: redis-server --appendonly yes

  # ניטור עם Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: payments_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - payments_network

  # Grafana לדשבורד ניטור
  grafana:
    image: grafana/grafana:latest
    container_name: payments_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - payments_network

  # Node Exporter לניטור מערכת
  node-exporter:
    image: prom/node-exporter:latest
    container_name: payments_node_exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - payments_network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  payments_network:
    driver: bridge 